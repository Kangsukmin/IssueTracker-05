@hostname = localhost
@port = 5000
@host = http://{{hostname}}:{{port}}/api
@contentType = application/json

###

# @name login
POST {{host}}/login HTTP/1.1
content-type: {{contentType}}

{
  "userId": "test123",
  "password": "123456a@",
  "resourceServer": "local"
}

### 기록 받아오기

@authToken = {{login.response.body.token}}

### 특정 이슈 하나 불러오기

# @issueId=11

GET {{host}}/issue/{{issueId}} HTTP/1.1
content-type: {{contentType}}
Authorization: Bearer {{authToken}}

### 이슈 불러오기

GET {{host}}/issue
?page=4
content-type: {{contentType}}
Authorization: Bearer {{authToken}}

### 이슈 생성 (1). 관계 테이블이 없는 경우*

POST {{host}}/issue HTTP/1.1
content-type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "title": "이슈 타이틀",
  "content": null,
  "author": "이슈 작성자",
  "label": null,
  "mid": null,
  "assignees": null
}

### 이슈 생성 (2). 관계 테이블이 있는 경우

POST {{host}}/issue HTTP/1.1
content-type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "title": "testtesttest",
  "content": null,
  "author": "이슈 작성자",
  "labels": [
    {
      "name": "baseball"
    },
    {
      "name": "soccer"
    }
  ],
  "mid": null,
  "assignees": null
}

### 이슈 수정(1). 관계 테이블이 없는 경우

@issueId=47

PATCH {{host}}/issue/{{issueId}} HTTP/1.1
content-type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "content": "바뀔 내용3",
  "labels": [
    {
      "name": "question",
      "state": false
    },
    {
      "name": "bug",
      "state": true
    }
  ]
}
