!function(e){var t={};function s(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(r,a,function(t){return e[t]}.bind(null,a));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=26)}([function(e,t,s){"use strict";s.r(t),function(e){var r=s(19),a=s.n(r),n=s(20),o=s.n(n),u=s(6),i=s.n(u),l=s(21);const c=o.a.basename(e),d=l.a.production,m={},w=new i.a(d.database,d.username,d.password,{host:d.host,port:d.port,dialect:"mysql",timezone:"+09:00"});a.a.readdirSync("./src/models").filter(e=>0!==e.indexOf(".")&&e!==c&&".js"===e.slice(-3)).forEach(e=>{const t=s(25)("./"+e).default(w,i.a.DataTypes);m[t.name]=t}),Object.keys(m).forEach(e=>{m[e].associate&&m[e].associate(m)}),m.sequelize=w,m.Sequelize=i.a,t.default=m}.call(this,"/index.js")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("passport")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("bcrypt")},function(e,t){e.exports=require("passport-jwt")},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("comment",{cid:{type:t.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0},content:{type:t.TEXT,allowNull:!1}},{tableName:"comment",underscored:!0});return s.associate=e=>{s.belongsTo(e.user,{foreignKey:{name:"uid",allowNull:!1}}),s.belongsTo(e.issue,{foreignKey:{name:"iid",allowNull:!1}})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("issue",{iid:{type:t.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0},isOpen:{type:t.BOOLEAN,allowNull:!1,defaultValue:!0},title:{type:t.STRING,allowNull:!1},content:{type:t.TEXT,allowNull:!0},closedAt:{type:t.DATE,allowNull:!0}},{tableName:"issue",underscored:!0});return s.associate=e=>{s.belongsTo(e.milestone,{foreignKey:{name:"mid",allowNull:!0}}),s.belongsTo(e.user,{foreignKey:{name:"uid",allowNull:!1}}),s.hasMany(e.comment,{foreignKey:{name:"iid",allowNull:!1}}),s.belongsToMany(e.user,{through:"issue_assignee",as:"assignees"}),s.belongsToMany(e.label,{through:"issue_label",as:"labels"})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("label",{name:{type:t.STRING,allowNull:!1,primaryKey:!0},color:{type:t.STRING,allowNull:!1},desc:{type:t.STRING,allowNull:!0}},{tableName:"label",underscored:!0});return s.associate=e=>{s.belongsToMany(e.issue,{through:"issue_label"})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("milestone",{mid:{type:t.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},isOpen:{type:t.BOOLEAN,allowNull:!1,defaultValue:!0},title:{type:t.STRING,allowNull:!1},dueDate:{type:t.DATE,allowNull:!0},content:{type:t.TEXT,allowNull:!0},closedAt:{type:t.DATE,allowNull:!0}},{tableName:"milestone",underscored:!0});return s.associate=e=>{s.hasMany(e.issue,{foreignKey:{name:"mid",allowNull:!0}})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("user",{uid:{type:t.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},userId:{type:t.STRING,allowNull:!1},password:{type:t.STRING,allowNull:!0},nickname:{type:t.STRING,allowNull:!1},OAuth:{type:t.BOOLEAN,allowNull:!1},resourceServer:{type:t.STRING,allowNull:!1},image:{type:t.TEXT,allowNull:!0}},{tableName:"user",underscored:!0});return s.associate=e=>{s.hasMany(e.comment,{foreignKey:{name:"uid",allowNull:!1}}),s.hasMany(e.issue,{foreignKey:{name:"uid",allowNull:!1}}),s.belongsToMany(e.issue,{through:"issue_assignee",as:"assignees"})},s}},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("http-errors")},function(e,t){e.exports=require("morgan")},function(e,t){e.exports=require("passport-local")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,s){"use strict";var r=s(2);if(s.n(r).a.config().error)throw new Error("Could't find .env file ");t.a={development:{host:process.env.DB_HOST,port:process.env.DB_PORT,username:process.env.DB_USERNAME,password:process.env.DB_PASSWORD,database:process.env.DB_DATABASE,dialect:"mysql"},test:{username:"root",password:null,database:"database_production",host:"127.0.0.1",dialect:"mysql"},production:{username:"root",password:null,database:process.env.DB_DATABASE,host:"127.0.0.1",dialect:"mysql"}}},function(e,t){e.exports=require("passport-github2")},function(e,t){e.exports=require("multer")},function(e,t){e.exports=require("multer-storage-imgur")},function(e,t,s){var r={"./":0,"./comment":9,"./comment.js":9,"./index":0,"./index.js":0,"./issue":10,"./issue.js":10,"./label":11,"./label.js":11,"./milestone":12,"./milestone.js":12,"./user":13,"./user.js":13};function a(e){var t=n(e);return s(t)}function n(e){if(!s.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=n,e.exports=a,a.id=25},function(e,t,s){"use strict";s.r(t);var r=s(1),a=s.n(r),n=s(14),o=s.n(n),u=s(15),i=s.n(u),l=s(16),c=s.n(l),d=s(17),m=s.n(d),w=s(3),f=s.n(w),y=s(18),p=s(4),h=s.n(p),g=s(7),b=s.n(g),E=s(2),j=s.n(E);if(j.a.config().error)throw new Error(" Couldn't find .env file ");var v={saltRounds:+process.env.SALT_ROUNDS};var O=e=>new Promise((t,s)=>{b.a.hash(e,v.saltRounds,(e,s)=>t(s))}),N=(e,t)=>new Promise((s,r)=>{b.a.compare(e,t,(e,t)=>s(t))});if(j.a.config().error)throw new Error(" Couldn't find .env file ");var A={secretOrKey:process.env.JWT_SECRET_KEY,githubClientId:process.env.GITHUB_ID,githubClientSecret:process.env.GITHUB_SECRET,githubCallbackURL:process.env.GITHUB_CALLBACK_URL,appleClientId:process.env.APPLE_CLIENT_ID,appleTeamId:process.env.APPLE_TEAM_ID,appleKeyId:process.env.APPLE_KEY_ID,applePrivateKey:process.env.APPLE_PRIVATE_KEY,appleCallbackURL:process.env.APPLE_CALLBACK_URL},I=s(0);var T=new y.Strategy({usernameField:"userId",passwordField:"password",session:!1},async(e,t,s)=>{const r=await I.default.user.findOne({where:{userId:e}});if(!r)return s(null,!1,{message:"찾는 아이디가 없습니다."});if(!await N(t,r.password))return s(null,!1,{message:"비밀번호가 다릅니다."});const a=h.a.sign(r.toJSON(),A.secretOrKey);return s(null,{user:r,token:a})}),S=s(8);const _={jwtFromRequest:S.ExtractJwt.fromAuthHeaderAsBearerToken(),secretOrKey:A.secretOrKey};var k=new S.Strategy(_,async(e,t)=>{try{const s=await I.default.user.findOne({where:{userId:e.userId,resourceServer:e.resourceServer}});return t(null,s?s:!1)}catch(e){return t(e,!1)}}),R=new(s(22).Strategy)({clientID:A.githubClientId,clientSecret:A.githubClientSecret,callbackURL:A.githubCallbackURL},async(e,t,s,r)=>{const a=await I.default.user.findOrCreate({where:{userId:s.id,resourceServer:s.provider,nickname:s.username,OAuth:!0}}),n=h.a.sign(a[0].toJSON(),A.secretOrKey);return r(null,{user:a,token:n,profile:s})});var q=async e=>!await I.default.user.findOne({where:{userId:e}}),x=async(e,t,s)=>{try{const r=await O(t);return await I.default.user.create({userId:""+e,nickname:""+s,password:""+r,OAuth:!1,resourceServer:"local"})}catch(e){throw new Error(e)}};var C=(e,t,s)=>{const{userId:r,password:a,nickname:n}=e.body;if(r.length<6)return t.status(400).json({message:"아이디는 6자 이상 적어주셔야 합니다."});if(r.length>16)return t.status(400).json({message:"아이디는 16자 이하로 적어주셔야 합니다."});if(n.length<6)return t.status(400).json({message:"닉네임은 6자 이상 적어주셔야 합니다."});if(n.length>16)return t.status(400).json({message:"닉네임 16자 이하로 적어주셔야 합니다."});if(a.length<6)return t.status(400).json({message:"비밀번호는 6자 이상 적어주셔야 합니다."});if(a.length>12)return t.status(400).json({message:"비밀번호는 12자 이하로 적어주셔야 합니다."});const o=/[a-zA-Z0-9]/;return o.test(r)?o.test(n)?/[0-9]/.test(a)&&/[a-zA-Z]/.test(a)&&/[~!@#$%^&*()_+|<>?:{}]/.test(a)?void s():t.status(400).json({message:"비밀번호는 영문자, 숫자, 특수문자로 구성되어야 합니다."}):t.status(400).json({message:"닉네임은 영문과 숫자로만 적어주셔야 합니다."}):t.status(400).json({message:"아이디는 영문과 숫자로만 적어주셔야 합니다."})},K=async(e,t,s)=>{const{userId:r}=e.body;if(!await q(r))return t.status(400).json({message:"아이디가 이미 존재합니다."});s()};var D=(e,t)=>t.status(200),P=async(e,t)=>{const{userId:s,password:r,nickname:a}=e.body;try{const e=await x(s,r,a);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},L=s(5),B=s.n(L);var G=async e=>{const t=await B.a.get("https://api.github.com/user",{headers:{Authorization:"Bearer "+e}}),{data:s}=t,r=await I.default.user.findOrCreate({where:{userId:s.id,resourceServer:"github",nickname:s.login,OAuth:!0}}),a=h.a.sign(r[0].toJSON(),A.secretOrKey);return{user:r,token:a}};var z=async e=>{const t=await B.a.get("https://api.appstoreconnect.apple.com/v1/apps",{headers:{Authorization:"Bearer "+e}}),{data:s}=t,r=await I.default.user.findOrCreate({where:{userId:s.id,resourceServer:"apple",nickname:s.login,OAuth:!0}}),a=h.a.sign(r[0].toJSON(),A.secretOrKey);return{user:r,token:a}};var M=(e,t)=>t.status(200).json(e.user),U=(e,t)=>t.status(200).json(e.user),$=async(e,t)=>{const{token:s}=e.body,r=await G(s);return t.status(200).json(r)},J=async(e,t)=>{const{token:s}=e.body,r=await z(s);return t.status(200).json(r)},F=async e=>{try{if(""===e.title)throw new Error("마일스톤의 제목은 필수로 작성해주셔야 합니다.");return await I.default.milestone.create(e)}catch(e){throw new Error(e)}},H=async e=>{try{return await I.default.milestone.destroy({where:{mid:e}}),!0}catch(e){throw new Error(e)}},X=async(e,t)=>{try{if(""===t.title)throw new Error("마일스톤의 제목은 필수로 작성해주셔야 합니다.");!1===t.isOpen&&(t.closedAt=new Date);return await I.default.milestone.update(t,{where:{mid:e}})}catch(e){throw new Error(e)}},Y=async()=>{try{return await I.default.milestone.findAll({include:[{model:I.default.issue,attributes:["iid","title","isOpen"]}]})}catch(e){throw new Error(e)}};var V=async(e,t)=>{try{const e=await Y();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},W=async(e,t)=>{try{return await H(e.params.id),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},Z=async(e,t)=>{const{body:s}=e;try{return await X(e.params.id,s),t.status(200).end()}catch(e){t.status(400).json({message:e.message})}},Q=async(e,t)=>{const{body:s}=e;try{const e=await F(s);return t.status(200).json(e)}catch(e){t.status(400).json({message:e.message})}},ee=f.a.authenticate("jwt",{session:!1}),te=async(e,t)=>{try{if(""===e.title)throw new Error("이슈의 제목은 필수로 작성해주셔야 합니다.");const s=await I.default.issue.create({...e,uid:t});if(e.labels){const t=await I.default.label.findAll({where:{[I.default.Sequelize.Op.or]:e.labels}});await s.addLabels(t,{through:{selfGranted:!0}})}if(e.assignees){const t=await I.default.user.findAll({where:{[I.default.Sequelize.Op.or]:e.assignees}});await s.addAssignees(t,{through:{selfGranted:!0}})}return s}catch(e){throw new Error(e)}},se=async e=>{try{return await I.default.comment.destroy({where:{iid:e}}),await I.default.issue.destroy({where:{iid:e}}),!0}catch(e){throw new Error(e)}},re=async e=>{try{return await I.default.issue.findOne({where:{iid:e},attributes:["iid","isOpen","title","content","createdAt","closedAt"],include:[{model:I.default.user,attributes:["uid","userId","nickname","image"]},{model:I.default.comment,attributes:["cid","content","createdAt"],include:[{model:I.default.user,attributes:["uid","userId","nickname","image"]}]},{model:I.default.user,attributes:["uid","userId","nickname","image"],as:"assignees",through:{attributes:[]}},{model:I.default.label,through:{attributes:[]},as:"labels",attributes:["name","color","desc"]},{model:I.default.milestone,attributes:["mid","title"],include:[{model:I.default.issue,attributes:["isOpen"]}]}]})}catch(e){throw new Error(e)}},ae=async(e,t)=>{try{if(!e.page){return await I.default.issue.findAll({attributes:["iid","isOpen","title","createdAt","closedAt","content"],include:[{model:I.default.user,attributes:["uid","userId","nickname","image"]},{model:I.default.comment,attributes:["cid","uid"]},{model:I.default.user,attributes:["uid","userId","nickname","image"],as:"assignees",through:{attributes:[]}},{model:I.default.label,through:{attributes:[]},as:"labels",attributes:["name","color"]},{model:I.default.milestone,attributes:["mid","title","updatedAt"],include:[{model:I.default.issue,attributes:["isOpen"]}]}]})}const s={isOpen:e.isOpen?"true"===e.isOpen:void 0,uid:e.isYours?t:e.author,mid:e.mid?e.mid:void 0,"$assignees.id$":e.assignees?e.assignees:void 0,"$labels.name$":e.labels?e.labels:void 0,"$comments.uid$":e.isComment?t:void 0};Object.keys(s).forEach(e=>void 0===s[e]?delete s[e]:{});return await I.default.issue.findAll({include:["milestone","comments","assignees","labels"],where:s})}catch(e){throw new Error(e)}},ne=async(e,t)=>{try{if(e){if(""===e.title)throw new Error("이슈의 제목은 필수로 작성해주셔야 합니다.");!1===e.isOpen&&(e.closedAt=new Date),await I.default.issue.update({...e},{where:{iid:t}});const{labels:s,assignees:r}=e;if(s||r){const e=await getTargetIssue(t);if(s){const[r,a]=s.reduce((e,t)=>(t.state?(delete t.state,e[0].push(t)):e[1].push(t.name),e),[[],[]]);if(r.length){const t=await I.default.label.findAll({where:{[I.default.Sequelize.Op.or]:r}});await e.addLabels(t,{through:{selfGranted:!0}})}a.length&&await I.default.sequelize.models.issue_label.destroy({where:{issue_iid:t,label_name:{[I.default.Sequelize.Op.or]:a}}})}if(r){const[s,a]=r.reduce((e,t)=>(t.state?(delete t.state,e[0].push(t)):e[1].push(t.uid),e),[[],[]]);if(s.length){const t=await I.default.user.findAll({where:{[I.default.Sequelize.Op.or]:s}});await e.addAssignees(t,{through:{selfGranted:!0}})}a.length&&await I.default.sequelize.models.issue_assignee.destroy({where:{issue_iid:t,user_uid:{[I.default.Sequelize.Op.or]:a}}})}}return!0}}catch(e){throw new Error(e)}};var oe=async(e,t)=>{try{const s=await ae(e.query,e.user.uid);return t.status(200).json(s)}catch(e){return t.status(400).json({message:e.message})}},ue=async(e,t)=>{const s=e.params.id;try{const e=await re(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},ie=async(e,t)=>{const{body:s}=e,{uid:r}=e.user;try{const e=await te(s,r);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},le=async(e,t)=>{const s=e.params.id,{body:r}=e;try{const e=await ne(r,s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},ce=async(e,t)=>{const s=e.params.id;try{return await se(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},de=async(e,t,s)=>{try{if(""===e)throw new Error("댓글의 내용은 필수로 작성해주셔야 합니다.");return await I.default.comment.create({content:e,uid:t,iid:s}),!0}catch(e){throw new Error(e)}},me=async e=>{try{return await I.default.comment.destroy({where:{cid:e}}),!0}catch(e){throw new Error(e)}},we=async e=>{try{return await I.default.comment.findByPk(e)}catch(e){throw new Error(e)}},fe=async e=>{try{return I.default.comment.findAll({attributes:["cid","content","createdAt"],include:[{model:I.default.user,attributes:["uid","userId","nickname","image"]}],where:{iid:e}})}catch(e){throw new Error(e)}},ye=async(e,t)=>{try{if(""===e)throw new Error("댓글의 내용은 필수로 작성해주셔야 합니다.");return await I.default.comment.update({content:e},{where:{cid:t}}),!0}catch(e){throw new Error(e)}};var pe=async(e,t)=>{const{iid:s}=e.params;try{const e=await fe(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},he=async(e,t)=>{const{content:s,iid:r}=e.body,{uid:a}=e.user;try{return await de(s,a,r),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},ge=async(e,t)=>{const{cid:s}=e.params,{content:r}=e.body;try{return await ye(r,s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},be=async(e,t)=>{const{cid:s}=e.params;try{return await me(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}};var Ee=async(e,t,s)=>{const{cid:r}=e.params,{uid:a}=e.user;try{if((await we(r)).uid!==a)return t.status(400).json({message:"댓글을 쓴 사용자가 아닙니다."})}catch(e){return t.status(400).json(e)}s()},je=async(e,t,s)=>{try{if(""===e)throw new Error("레이블 이름이 존재해야 합니다.");if(""===s)throw new Error("레이블 색상이 존재해야 합니다.");if(await I.default.label.findByPk(e))throw new Error("이미 존재하는 이름입니다.");return await I.default.label.create({name:e,desc:t,color:s}),!0}catch(e){throw new Error(e)}},ve=async e=>{try{return await I.default.label.destroy({where:{name:e}}),!0}catch(e){throw new Error(e)}},Oe=async e=>{try{return await I.default.label.findOne({where:{name:e}})}catch(e){throw new Error(e)}},Ne=async()=>{try{return I.default.label.findAll()}catch(e){throw new Error(e)}},Ae=async(e,t,s,r)=>{try{if(""===t)throw new Error("레이블 이름이 존재해야 합니다.");if(""===r)throw new Error("레이블 색상이 존재해야 합니다.");const a=await I.default.label.findByPk(t);if(e!==t&&a)throw new Error("이미 존재하는 이름입니다.");return await I.default.label.update({name:t,desc:s,color:r},{where:{name:e}}),!0}catch(e){throw new Error(e)}};var Ie=async(e,t)=>{const{name:s,desc:r,color:a}=e.body;try{return await je(s,r,a),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},Te=async(e,t)=>{try{const e=await Ne();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},Se=async(e,t)=>{const{name:s}=e.params;try{const e=await Oe(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},_e=async(e,t)=>{const s=e.params.name,{name:r,desc:a,color:n}=e.body;try{return await Ae(s,r,a,n),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},ke=async(e,t)=>{const{name:s}=e.params;try{return await ve(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},Re=s(23),qe=s.n(Re),xe=s(24),Ce=s.n(xe),Ke=async(e,t)=>{try{return await I.default.user.update({image:e},{where:{uid:t}}),!0}catch(e){throw new Error(e)}};var De=(e,t)=>t.status(200).json({link:e.file.data.link}),Pe=async(e,t)=>{const{link:s}=e.file.data,{uid:r}=e.user;try{return await Ke(s,r),t.status(200).json({link:s})}catch(e){return t.status(400).json({message:e})}};if(j.a.config().error)throw new Error(" Couldn't find .env file ");var Le={clientId:process.env.IMGUR_CLIENT_ID},Be=async()=>{try{return I.default.user.findAll({attributes:["uid","userId","nickname","image"]})}catch(e){throw new Error(e)}};var Ge=async(e,t)=>{try{const e=await Be();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},ze=()=>{const e=Object(r.Router)();return(e=>{const t=Object(r.Router)(),s=qe()({storage:Ce()({clientId:Le.clientId})});e.use("/image",t),t.use(ee),t.post("/upload",s.single("img"),De),t.post("/profile",s.single("img"),Pe)})(e),(e=>{const t=Object(r.Router)();e.use("/login",t),t.post("/",f.a.authenticate("local",{session:!1}),M),t.get("/github",f.a.authenticate("github",{scope:["user: email"]})),t.get("/github/callback",f.a.authenticate("github",{session:!1}),U),t.post("/github",$),t.post("/apple",J)})(e),(e=>{const t=Object(r.Router)();e.use("/signup",t),t.post("/check-id",K,D),t.post("/",C,K,P)})(e),(e=>{const t=Object(r.Router)();e.use("/milestone",t),t.use(ee),t.get("/",V),t.delete("/:id",W),t.patch("/:id",Z),t.post("/",Q)})(e),(e=>{const t=Object(r.Router)();e.use("/issue",t),t.use(ee),t.get("/",oe),t.get("/:id",ue),t.post("/",ie),t.patch("/:id",le),t.delete("/:id",ce)})(e),(e=>{const t=Object(r.Router)();e.use("/comment",t),t.use(ee),t.get("/:iid",pe),t.post("/",he),t.patch("/:cid",Ee,ge),t.delete("/:cid",Ee,be)})(e),(e=>{const t=Object(r.Router)();e.use("/label",t),t.use(ee),t.post("/",Ie),t.get("/",Te),t.get("/:name",Se),t.patch("/:name",_e),t.delete("/:name",ke)})(e),(e=>{const t=Object(r.Router)();e.use("/user",t),t.use(ee),t.get("/",Ge)})(e),e};if(j.a.config().error)throw new Error(" Couldn't find .env file ");var Me="/api",Ue={origin:!0,credentials:!0},$e=async e=>{e.use(m()("dev")),e.use(i()(Ue)),e.use(Object(r.json)()),e.use(Object(r.urlencoded)({extended:!1})),e.use(o()()),(e=>{e.use(f.a.initialize()),f.a.use(T),f.a.use(k),f.a.use(R),console.log("🍗 passport Connect! 🍗")})(e),e.get("/status",(e,t)=>t.status(200).end()),e.use(Me,ze()),e.use((e,t,s)=>s(c()(404,"Not Found"))),e.use((e,t,s,r)=>s.status(e.status).json({message:e.message}))},Je=async e=>{await(async()=>{try{await I.default.sequelize.sync({force:!1})}catch(e){throw new Error(e)}})(),console.log("🎉 DB Connect! 🎉"),await $e(e),console.log("🍟 Express Connect! 🍟")};if(j.a.config().error)throw new Error(" Couldn't find .env file ");var Fe={port:process.env.PORT};(async()=>{const e=a()();await Je(e),e.listen(Fe.port,()=>{console.log("Example app listening at http://localhost:"+Fe.port)})})()}]);