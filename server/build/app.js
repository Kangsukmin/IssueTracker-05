!function(e){var t={};function s(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(r,a,function(t){return e[t]}.bind(null,a));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=26)}([function(e,t,s){"use strict";s.r(t),function(e){var r=s(18),a=s.n(r),n=s(19),o=s.n(n),u=s(4),i=s.n(u),c=s(20);const l=o.a.basename(e),d=c.a.production,f={},p=new i.a(d.database,d.username,d.password,{host:d.host,port:d.port,dialect:"mysql",timezone:"+09:00"});a.a.readdirSync("./src/models").filter(e=>0!==e.indexOf(".")&&e!==l&&".js"===e.slice(-3)).forEach(e=>{const t=s(25)("./"+e).default(p,i.a.DataTypes);f[t.name]=t}),Object.keys(f).forEach(e=>{f[e].associate&&f[e].associate(f)}),f.sequelize=p,f.Sequelize=i.a,t.default=f}.call(this,"/index.js")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("passport")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("bcrypt")},function(e,t){e.exports=require("passport-jwt")},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("comment",{cid:{type:t.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0},content:{type:t.TEXT,allowNull:!1}},{tableName:"comment",underscored:!0});return s.associate=e=>{s.belongsTo(e.user,{foreignKey:{name:"uid",allowNull:!1}}),s.belongsTo(e.issue,{foreignKey:{name:"iid",allowNull:!1}})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("issue",{iid:{type:t.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0},isOpen:{type:t.BOOLEAN,allowNull:!1,defaultValue:!0},title:{type:t.STRING,allowNull:!1},content:{type:t.TEXT,allowNull:!0}},{tableName:"issue",underscored:!0});return s.associate=e=>{s.belongsTo(e.milestone,{foreignKey:{name:"mid",allowNull:!0}}),s.hasMany(e.comment,{foreignKey:{name:"iid",allowNull:!1}}),s.belongsToMany(e.user,{through:"issue_assignee"}),s.belongsToMany(e.label,{through:"issue_label"})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("label",{name:{type:t.STRING,allowNull:!1,primaryKey:!0},color:{type:t.STRING,allowNull:!1},desc:{type:t.STRING,allowNull:!0}},{tableName:"label",underscored:!0});return s.associate=e=>{s.belongsToMany(e.issue,{through:"issue_label"})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("milestone",{mid:{type:t.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},isOpen:{type:t.BOOLEAN,allowNull:!1,defaultValue:!0},title:{type:t.STRING,allowNull:!1},dueDate:{type:t.DATE,allowNull:!0},content:{type:t.TEXT,allowNull:!0}},{tableName:"milestone",underscored:!0});return s.associate=e=>{s.hasMany(e.issue,{foreignKey:{name:"mid",allowNull:!0}})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("user",{uid:{type:t.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},userId:{type:t.STRING,allowNull:!1},password:{type:t.STRING,allowNull:!0},nickname:{type:t.STRING,allowNull:!1},OAuth:{type:t.BOOLEAN,allowNull:!1},resourceServer:{type:t.STRING,allowNull:!1}},{tableName:"user",underscored:!0});return s.associate=e=>{s.hasMany(e.comment,{foreignKey:{name:"uid",allowNull:!1}}),s.hasMany(e.issue,{foreignKey:{name:"uid",allowNull:!1}}),s.belongsToMany(e.issue,{through:"issue_assignee"})},s}},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("http-errors")},function(e,t){e.exports=require("morgan")},function(e,t){e.exports=require("passport-local")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,s){"use strict";var r=s(3);if(s.n(r).a.config().error)throw new Error("Could't find .env file ");t.a={development:{host:process.env.DB_HOST,port:process.env.DB_PORT,username:process.env.DB_USERNAME,password:process.env.DB_PASSWORD,database:process.env.DB_DATABASE,dialect:"mysql"},test:{username:"root",password:null,database:"database_production",host:"127.0.0.1",dialect:"mysql"},production:{username:process.env.DB_USERNAME,password:process.env.DB_PASSWORD,database:process.env.DB_DATABASE,port:"3031",host:"127.0.0.1",dialect:"mysql"}}},function(e,t){e.exports=require("passport-github2")},function(e,t){e.exports=require("passport-apple")},function(e,t){e.exports=require("multer")},function(e,t){e.exports=require("multer-storage-imgur")},function(e,t,s){var r={"./":0,"./comment":8,"./comment.js":8,"./index":0,"./index.js":0,"./issue":9,"./issue.js":9,"./label":10,"./label.js":10,"./milestone":11,"./milestone.js":11,"./user":12,"./user.js":12};function a(e){var t=n(e);return s(t)}function n(e){if(!s.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=n,e.exports=a,a.id=25},function(e,t,s){"use strict";s.r(t);var r=s(1),a=s.n(r),n=s(13),o=s.n(n),u=s(14),i=s.n(u),c=s(15),l=s.n(c),d=s(16),f=s.n(d),p=s(2),y=s.n(p),m=s(17),w=s(6),h=s.n(w),g=s(3),b=s.n(g);if(b.a.config().error)throw new Error(" Couldn't find .env file ");var j={saltRounds:+process.env.SALT_ROUNDS};var v=e=>new Promise((t,s)=>{h.a.hash(e,j.saltRounds,(e,s)=>t(s))}),E=(e,t)=>new Promise((s,r)=>{h.a.compare(e,t,(e,t)=>s(t))}),O=s(0);var I=new m.Strategy({usernameField:"userId",passwordField:"password",session:!1},async(e,t,s)=>{const r=await O.default.user.findOne({where:{userId:e}});if(!r)return s(null,!1,{message:"찾는 아이디가 없습니다."});return await E(t,r.password)?s(null,r):s(null,!1,{message:"비밀번호가 다릅니다."})}),N=s(7);if(b.a.config().error)throw new Error(" Couldn't find .env file ");var S={secretOrKey:process.env.JWT_SECRET_KEY,githubClientId:process.env.GITHUB_ID,githubClientSecret:process.env.GITHUB_SECRET,githubCallbackURL:process.env.GITHUB_CALLBACK_URL,appleClientId:process.env.APPLE_CLIENT_ID,appleTeamId:process.env.APPLE_TEAM_ID,appleKeyId:process.env.APPLE_KEY_ID,applePrivateKey:process.env.APPLE_PRIVATE_KEY,appleCallbackURL:process.env.APPLE_CALLBACK_URL};const T={jwtFromRequest:N.ExtractJwt.fromAuthHeaderAsBearerToken(),secretOrKey:S.secretOrKey};var A=new N.Strategy(T,async(e,t)=>{try{const s=await O.default.user.findOne({where:{userId:e.userId,resourceServer:e.resourceServer}});return t(null,s?s:!1)}catch(e){return t(e,!1)}}),R=new(s(21).Strategy)({clientID:S.githubClientId,clientSecret:S.githubClientSecret,callbackURL:S.githubCallbackURL},async(e,t,s,r)=>r(null,await O.default.user.findOrCreate({where:{userId:s.id,resourceServer:s.provider,nickname:s.username,OAuth:!0}}))),_=s(22),k=new(s.n(_).a)({clientID:S.appleClientId,teamID:S.appleTeamId,callbackURL:S.appleCallbackURL,keyID:S.appleKeyId,privateKeyLocation:S.applePrivateKey,passReqToCallback:!0},async(e,t,s,r,a,n)=>n(null,await O.default.user.findOrCreate({where:{userId:a.id,resourceServer:"apple",nickname:a.username,OAuth:!0}})));var x=async e=>!await O.default.user.findOne({where:{userId:e}}),D=async(e,t,s)=>{try{const r=await v(t);return await O.default.user.create({userId:""+e,nickname:""+s,password:""+r,OAuth:!1,resourceServer:"local"})}catch(e){throw new Error(e)}};var q=(e,t,s)=>{const{userId:r,password:a,nickname:n}=e.body;if(r.length<6)return t.status(400).json({message:"아이디는 6자 이상 적어주셔야 합니다."});if(r.length>16)return t.status(400).json({message:"아이디는 16자 이하로 적어주셔야 합니다."});if(n.length<6)return t.status(400).json({message:"닉네임은 6자 이상 적어주셔야 합니다."});if(n.length>16)return t.status(400).json({message:"닉네임 16자 이하로 적어주셔야 합니다."});if(a.length<6)return t.status(400).json({message:"비밀번호는 6자 이상 적어주셔야 합니다."});if(a.length>12)return t.status(400).json({message:"비밀번호는 12자 이하로 적어주셔야 합니다."});const o=/[a-zA-Z0-9]/;return o.test(r)?o.test(n)?/[0-9]/.test(a)&&/[a-zA-Z]/.test(a)&&/[~!@#$%^&*()_+|<>?:{}]/.test(a)?void s():t.status(400).json({message:"비밀번호는 영문자, 숫자, 특수문자로 구성되어야 합니다."}):t.status(400).json({message:"닉네임은 영문과 숫자로만 적어주셔야 합니다."}):t.status(400).json({message:"아이디는 영문과 숫자로만 적어주셔야 합니다."})},B=async(e,t,s)=>{const{userId:r}=e.body;if(!await x(r))return t.status(400).json({message:"아이디가 이미 존재합니다."});s()};var C=(e,t)=>t.status(200),P=async(e,t)=>{const{userId:s,password:r,nickname:a}=e.body;try{const e=await D(s,r,a);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},K=s(5),L=s.n(K);var M=(e,t)=>{y.a.authenticate("local",{session:!1},(s,r,a)=>s||!r?t.status(400).json(a):e.login(r,{session:!1},e=>{e&&t.send(e);const s=L.a.sign(r.toJSON(),S.secretOrKey);return t.json({user:r,token:s})}))(e,t)},G=(e,t)=>{y.a.authenticate("github",{session:!1},(e,s)=>{if(e)return t.status(400).json({message:e});const r=L.a.sign(s[0].toJSON(),S.secretOrKey);return t.status(200).json({user:s,token:r})})(e,t)},U=(e,t)=>{y.a.authenticate("apple",{session:!1},(e,s)=>{if(e)return t.status(400).json({message:e});const r=L.a.sign(s[0].toJSON(),S.secretOrKey);return t.status(200).json({user:s,token:r})})(e,t)};var z=(e,t)=>{M(e,t)},F=(e,t)=>{y.a.authenticate("github",{scope:["user: email"]})(e,t)},H=(e,t)=>{G(e,t)},J=(e,t)=>{y.a.authenticate("apple")(e,t)},V=(e,t)=>{U(e,t)};var W={getMilestoneFromDB:async()=>{try{return await O.default.milestone.findAll()}catch(e){throw new Error(e)}},deleteMilestoneFromDB:async e=>{try{return await O.default.history.destroy({where:{mid:e}}),!0}catch(e){throw new Error(e)}},editMilestoneFromDB:async(e,t)=>{try{let s=await O.default.milestone.findByPk(e);return s={...s,...t},await s.save(),!0}catch(e){throw new Error(e)}},addMilestoneToDB:async e=>{let t;try{t=await O.default.milestone.create(e)}catch(e){throw new Error(e)}return t}};var X=async(e,t)=>{try{const e=await W.getMilestoneFromDB();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e})}},Y=async(e,t)=>{try{return await W.deleteMilestonFromDB(e.params.id),t.status(200).end()}catch(e){return t.status(400).json({message:e})}},Z=async(e,t)=>{const{body:s}=e;try{await W.editMilestoneFromDB(e.params.id,s)}catch(e){t.status(400).json({message:e})}return t.status(200).end()},$=async(e,t)=>{const{body:s}=e;let r;try{r=await W.addMilestoneToDB(s)}catch(e){t.status(400).json({message:e})}return t.status(200).json(r)};var Q={getTargetIssue:async e=>{try{return await O.default.issue.findOne({where:{iid:e}})}catch(e){throw new Error(e)}},getIssues:async e=>{try{if(!e){return await O.default.issue.findAll({include:[O.default.label,O.default.user]})}const t=e>1?10*(e-1):0;return await O.default.issue.findAll({offset:t,limit:10})}catch(e){throw new Error(e)}},createIssue:async(e,t)=>{try{const s=await O.default.issue.create({...e,uid:t});if(e.labels){const t=await O.default.label.findAll({where:{[O.default.Sequelize.Op.or]:e.labels}});await s.addLabels(t,{through:{selfGranted:!0}})}if(e.assignees){const t=await O.default.user.findAll({where:{[O.default.Sequelize.Op.or]:e.assignees}});await s.addUsers(t,{through:{selfGranted:!0}})}return s}catch(e){throw new Error(e)}},deleteIssue:async e=>{try{await O.default.issue.destroy({where:{iid:e}})}catch(e){throw new Error(e)}}};var ee=async(e,t)=>{const{page:s}=e.query;try{const e=await Q.getIssues(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},te=async(e,t)=>{const s=e.params.id;try{const e=await Q.getIssue(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},se=async(e,t)=>{const{body:s}=e,{uid:r}=e.user;try{const e=await Q.createIssue(s,r);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},re=async(e,t)=>{const s=e.params.id;try{return await Q.deleteIssue(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},ae=y.a.authenticate("jwt",{session:!1});var ne=async e=>{try{return await O.default.comment.findByPk(e)}catch(e){throw new Error(e)}},oe=async e=>{try{return O.default.comment.findAll({where:{iid:e}})}catch(e){throw new Error(e)}},ue=async(e,t,s,r)=>{try{await O.default.comment.create({nickname:e,content:t,uid:s,iid:r})}catch(e){throw new Error(e)}},ie=async(e,t)=>{try{await O.default.comment.update({content:e},{where:{cid:t}})}catch(e){throw new Error(e)}},ce=async e=>{try{await O.default.comment.destroy({where:{cid:e}})}catch(e){throw new Error(e)}};var le=async(e,t)=>{const{iid:s}=e.params;try{const e=await oe(s);return t.status(200).json(e)}catch(e){throw new Error(e)}},de=async(e,t)=>{const{nickname:s,content:r,iid:a}=e.body,{uid:n}=e.user;try{return await ue(s,r,n,a),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},fe=async(e,t)=>{const{cid:s}=e.params,{content:r}=e.body;try{return await ie(r,s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},pe=async(e,t)=>{const{cid:s}=e.params;try{return await ce(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}};var ye=async(e,t,s)=>{const{cid:r}=e.params,{uid:a}=e.user;try{if((await ne(r)).uid!==a)return t.status(400).json({message:"댓글을 쓴 사용자가 아닙니다."})}catch(e){return t.status(400).json(e)}s()};var me=async(e,t,s)=>{try{if(await O.default.label.findByPk(e))throw new Error("이미 존재하는 이름입니다.");await O.default.label.create({name:e,desc:t,color:s})}catch(e){throw new Error(e)}},we=async()=>{try{return O.default.label.findAll()}catch(e){throw new Error(e)}},he=async e=>{try{return await O.default.label.findOne({where:{name:e}})}catch(e){throw new Error(e)}},ge=async(e,t,s,r)=>{try{if(await O.default.label.findByPk(t))throw new Error("이미 존재하는 이름입니다.");await O.default.label.update({name:t,desc:s,color:r},{where:{name:e}})}catch(e){throw new Error(e)}},be=async e=>{try{await O.default.label.destroy({where:{name:e}})}catch(e){throw new Error(e)}};var je=async(e,t)=>{const{name:s,desc:r,color:a}=e.body;try{return await me(s,r,a),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},ve=async(e,t)=>{try{const e=await we();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},Ee=async(e,t)=>{const{name:s}=e.params;try{const e=await he(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},Oe=async(e,t)=>{const s=e.params.name,{name:r,desc:a,color:n}=e.body;try{return await ge(s,r,a,n),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},Ie=async(e,t)=>{const{name:s}=e.params;try{return await be(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}};var Ne=async e=>{const t=(async e=>{const{uid:t,mid:s}=e,r={uid:t,mid:s};Object.keys(r).forEach(e=>void 0===r[e]?delete r[e]:{});return(await O.default.issue.findAll({attributes:["iid"],where:r})).map(e=>e.iid)})(e),s=(async e=>{if(!e)return[];const t=await O.default.label.findAll({where:{[O.default.Sequelize.Op.or]:e},include:[{model:O.default.issue,attributes:["iid"]}]}),s=new Set;t.forEach(e=>e.issues.forEach(e=>s.add(e.iid)));return Array.from(s)})(e.labels),r=(async e=>{if(!e)return[];const t=await O.default.user.findAll({where:{[O.default.Sequelize.Op.or]:e},include:[{model:O.default.issue,attributes:["iid"]}]}),s=new Set;t.forEach(e=>e.issues.forEach(e=>s.add(e.iid)));return Array.from(s)})(e.assignees),[a,n,o]=await Promise.all([t,s,r]),u=new Set([...a,...n,...o]),i=Array.from(u);return O.default.issue.findAll({where:{iid:{[O.default.Sequelize.Op.or]:i}},include:[O.default.label,O.default.user]})};var Se=async(e,t)=>{const s=await Ne(e.body);return t.status(200).json(s)},Te=s(23),Ae=s.n(Te),Re=s(24),_e=s.n(Re);var ke=async(e,t)=>t.status(200).json({link:e.file.data.link}),xe=()=>{const e=Object(r.Router)();return(e=>{const t=Object(r.Router)(),s=Ae()({storage:_e()({clientId:"fa16234a61b3af6"})});e.use("/image",t),t.post("/upload",s.single("img"),ke)})(e),(e=>{const t=Object(r.Router)();e.use("/login",t),t.post("/",z),t.get("/github",F),t.get("/github/callback",H),t.get("/apple",J),t.get("/apple/callback",V)})(e),(e=>{const t=Object(r.Router)();e.use("/signup",t),t.post("/check-id",B,C),t.post("/",q,B,P)})(e),(e=>{const t=Object(r.Router)();e.use("/milestone",t),t.get("/",X),t.delete("/:id",Y),t.patch("/:id",Z),t.post("/",$)})(e),(e=>{const t=Object(r.Router)();e.use("/issue",t),t.get("/",ee),t.get("/:id",te),t.post("/",se),t.delete("/:id",re)})(e),(e=>{const t=Object(r.Router)();e.use("/comment",t),t.use(ae),t.get("/:iid",le),t.post("/",de),t.patch("/:cid",ye,fe),t.delete("/:cid",ye,pe)})(e),(e=>{const t=Object(r.Router)();e.use("/label",t),t.post("/",je),t.get("/",ve),t.get("/:name",Ee),t.patch("/:name",Oe),t.delete("/:name",Ie)})(e),(e=>{const t=Object(r.Router)();e.use("/filter",t),t.use(ae),t.post("/list"),t.post("/search",Se)})(e),e};if(b.a.config().error)throw new Error(" Couldn't find .env file ");var De={prefix:"/api",corsOption:{origin:process.env.CORS,credentials:!0}},qe=async e=>{e.use(f()("dev")),e.use(i()(De.corsOption)),e.use(Object(r.json)()),e.use(Object(r.urlencoded)({extended:!1})),e.use(o()()),(e=>{e.use(y.a.initialize()),y.a.use(I),y.a.use(A),y.a.use(R),y.a.use(k),console.log("🍗 passport Connect! 🍗")})(e),e.get("/status",(e,t)=>t.status(200).end()),e.use(De.prefix,xe()),e.use((e,t,s)=>s(l()(404,"Not Found"))),e.use((e,t,s,r)=>s.status(e.status).json({message:e.message}))},Be=async e=>{await(async()=>{try{await O.default.sequelize.sync({force:!1})}catch(e){throw new Error(e)}})(),console.log("🎉 DB Connect! 🎉"),await qe(e),console.log("🍟 Express Connect! 🍟")};if(b.a.config().error)throw new Error(" Couldn't find .env file ");var Ce={port:process.env.PORT};(async()=>{const e=a()();await Be(e),e.listen(Ce.port,()=>{console.log("Example app listening at http://localhost:"+Ce.port)})})()}]);