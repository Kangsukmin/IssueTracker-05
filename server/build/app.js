!function(e){var t={};function s(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=e,s.c=t,s.d=function(e,t,a){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)s.d(a,r,function(t){return e[t]}.bind(null,r));return a},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=26)}([function(e,t,s){"use strict";s.r(t),function(e){var a=s(18),r=s.n(a),n=s(19),o=s.n(n),u=s(5),i=s.n(u),l=s(20);const c=o.a.basename(e),d=l.a.production,m={},f=new i.a(d.database,d.username,d.password,{host:d.host,port:d.port,dialect:"mysql",timezone:"+09:00"});r.a.readdirSync("./src/models").filter(e=>0!==e.indexOf(".")&&e!==c&&".js"===e.slice(-3)).forEach(e=>{const t=s(25)("./"+e).default(f,i.a.DataTypes);m[t.name]=t}),Object.keys(m).forEach(e=>{m[e].associate&&m[e].associate(m)}),m.sequelize=f,m.Sequelize=i.a,t.default=m}.call(this,"/index.js")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("passport")},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("bcrypt")},function(e,t){e.exports=require("passport-jwt")},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("comment",{cid:{type:t.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0},content:{type:t.TEXT,allowNull:!1}},{tableName:"comment",underscored:!0});return s.associate=e=>{s.belongsTo(e.user,{foreignKey:{name:"uid",allowNull:!1}}),s.belongsTo(e.issue,{foreignKey:{name:"iid",allowNull:!1}})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("issue",{iid:{type:t.INTEGER,allowNull:!1,primaryKey:!0,autoIncrement:!0},isOpen:{type:t.BOOLEAN,allowNull:!1,defaultValue:!0},title:{type:t.STRING,allowNull:!1},content:{type:t.TEXT,allowNull:!0},closedAt:{type:t.DATE,allowNull:!0}},{tableName:"issue",underscored:!0});return s.associate=e=>{s.belongsTo(e.milestone,{foreignKey:{name:"mid",allowNull:!0}}),s.belongsTo(e.user,{foreignKey:{name:"uid",allowNull:!1}}),s.hasMany(e.comment,{foreignKey:{name:"iid",allowNull:!1}}),s.belongsToMany(e.user,{through:"issue_assignee",as:"assignees"}),s.belongsToMany(e.label,{through:"issue_label"})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("label",{name:{type:t.STRING,allowNull:!1,primaryKey:!0},color:{type:t.STRING,allowNull:!1},desc:{type:t.STRING,allowNull:!0}},{tableName:"label",underscored:!0});return s.associate=e=>{s.belongsToMany(e.issue,{through:"issue_label"})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("milestone",{mid:{type:t.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},isOpen:{type:t.BOOLEAN,allowNull:!1,defaultValue:!0},title:{type:t.STRING,allowNull:!1},dueDate:{type:t.DATE,allowNull:!0},content:{type:t.TEXT,allowNull:!0},closedAt:{type:t.DATE,allowNull:!0}},{tableName:"milestone",underscored:!0});return s.associate=e=>{s.hasMany(e.issue,{foreignKey:{name:"mid",allowNull:!0}})},s}},function(e,t,s){"use strict";s.r(t),t.default=(e,t)=>{const s=e.define("user",{uid:{type:t.INTEGER,allowNull:!1,autoIncrement:!0,primaryKey:!0},userId:{type:t.STRING,allowNull:!1},password:{type:t.STRING,allowNull:!0},nickname:{type:t.STRING,allowNull:!1},OAuth:{type:t.BOOLEAN,allowNull:!1},resourceServer:{type:t.STRING,allowNull:!1},image:{type:t.TEXT,allowNull:!0}},{tableName:"user",underscored:!0});return s.associate=e=>{s.hasMany(e.comment,{foreignKey:{name:"uid",allowNull:!1}}),s.hasMany(e.issue,{foreignKey:{name:"uid",allowNull:!1}}),s.belongsToMany(e.issue,{through:"issue_assignee",as:"assignees"})},s}},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("http-errors")},function(e,t){e.exports=require("morgan")},function(e,t){e.exports=require("passport-local")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,s){"use strict";var a=s(3);if(s.n(a).a.config().error)throw new Error("Could't find .env file ");t.a={development:{host:process.env.DB_HOST,port:process.env.DB_PORT,username:process.env.DB_USERNAME,password:process.env.DB_PASSWORD,database:process.env.DB_DATABASE,dialect:"mysql"},test:{username:"root",password:null,database:"database_production",host:"127.0.0.1",dialect:"mysql"},production:{username:"root",password:null,database:process.env.DB_DATABASE,host:"127.0.0.1",dialect:"mysql"}}},function(e,t){e.exports=require("passport-github2")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("multer")},function(e,t){e.exports=require("multer-storage-imgur")},function(e,t,s){var a={"./":0,"./comment":8,"./comment.js":8,"./index":0,"./index.js":0,"./issue":9,"./issue.js":9,"./label":10,"./label.js":10,"./milestone":11,"./milestone.js":11,"./user":12,"./user.js":12};function r(e){var t=n(e);return s(t)}function n(e){if(!s.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=n,e.exports=r,r.id=25},function(e,t,s){"use strict";s.r(t);var a=s(1),r=s.n(a),n=s(13),o=s.n(n),u=s(14),i=s.n(u),l=s(15),c=s.n(l),d=s(16),m=s.n(d),f=s(2),w=s.n(f),y=s(17),p=s(6),h=s.n(p),g=s(3),b=s.n(g);if(b.a.config().error)throw new Error(" Couldn't find .env file ");var j={saltRounds:+process.env.SALT_ROUNDS};var v=e=>new Promise((t,s)=>{h.a.hash(e,j.saltRounds,(e,s)=>t(s))}),E=(e,t)=>new Promise((s,a)=>{h.a.compare(e,t,(e,t)=>s(t))}),O=s(0);var A=new y.Strategy({usernameField:"userId",passwordField:"password",session:!1},async(e,t,s)=>{const a=await O.default.user.findOne({where:{userId:e}});if(!a)return s(null,!1,{message:"찾는 아이디가 없습니다."});return await E(t,a.password)?s(null,a):s(null,!1,{message:"비밀번호가 다릅니다."})}),N=s(7);if(b.a.config().error)throw new Error(" Couldn't find .env file ");var I={secretOrKey:process.env.JWT_SECRET_KEY,githubClientId:process.env.GITHUB_ID,githubClientSecret:process.env.GITHUB_SECRET,githubCallbackURL:process.env.GITHUB_CALLBACK_URL,appleClientId:process.env.APPLE_CLIENT_ID,appleTeamId:process.env.APPLE_TEAM_ID,appleKeyId:process.env.APPLE_KEY_ID,applePrivateKey:process.env.APPLE_PRIVATE_KEY,appleCallbackURL:process.env.APPLE_CALLBACK_URL};const T={jwtFromRequest:N.ExtractJwt.fromAuthHeaderAsBearerToken(),secretOrKey:I.secretOrKey};var S=new N.Strategy(T,async(e,t)=>{try{const s=await O.default.user.findOne({where:{userId:e.userId,resourceServer:e.resourceServer}});return t(null,s?s:!1)}catch(e){return t(e,!1)}}),_=new(s(21).Strategy)({clientID:I.githubClientId,clientSecret:I.githubClientSecret,callbackURL:I.githubCallbackURL},async(e,t,s,a)=>a(null,await O.default.user.findOrCreate({where:{userId:s.id,resourceServer:s.provider,nickname:s.username,OAuth:!0}})));var R=async e=>!await O.default.user.findOne({where:{userId:e}}),q=async(e,t,s)=>{try{const a=await v(t);return await O.default.user.create({userId:""+e,nickname:""+s,password:""+a,OAuth:!1,resourceServer:"local"})}catch(e){throw new Error(e)}};var k=(e,t,s)=>{const{userId:a,password:r,nickname:n}=e.body;if(a.length<6)return t.status(400).json({message:"아이디는 6자 이상 적어주셔야 합니다."});if(a.length>16)return t.status(400).json({message:"아이디는 16자 이하로 적어주셔야 합니다."});if(n.length<6)return t.status(400).json({message:"닉네임은 6자 이상 적어주셔야 합니다."});if(n.length>16)return t.status(400).json({message:"닉네임 16자 이하로 적어주셔야 합니다."});if(r.length<6)return t.status(400).json({message:"비밀번호는 6자 이상 적어주셔야 합니다."});if(r.length>12)return t.status(400).json({message:"비밀번호는 12자 이하로 적어주셔야 합니다."});const o=/[a-zA-Z0-9]/;return o.test(a)?o.test(n)?/[0-9]/.test(r)&&/[a-zA-Z]/.test(r)&&/[~!@#$%^&*()_+|<>?:{}]/.test(r)?void s():t.status(400).json({message:"비밀번호는 영문자, 숫자, 특수문자로 구성되어야 합니다."}):t.status(400).json({message:"닉네임은 영문과 숫자로만 적어주셔야 합니다."}):t.status(400).json({message:"아이디는 영문과 숫자로만 적어주셔야 합니다."})},x=async(e,t,s)=>{const{userId:a}=e.body;if(!await R(a))return t.status(400).json({message:"아이디가 이미 존재합니다."});s()};var D=(e,t)=>t.status(200),B=async(e,t)=>{const{userId:s,password:a,nickname:r}=e.body;try{const e=await q(s,a,r);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},C=s(4),K=s.n(C);var P=(e,t)=>{w.a.authenticate("local",{session:!1},(s,a,r)=>s||!a?t.status(400).json(r):e.login(a,{session:!1},e=>{e&&t.send(e);const s=K.a.sign(a.toJSON(),I.secretOrKey);return t.json({user:a,token:s})}))(e,t)},L=(e,t)=>{w.a.authenticate("github",{session:!1},(e,s)=>{if(e)return t.status(400).json({message:e});const a=K.a.sign(s[0].toJSON(),I.secretOrKey);return t.status(200).json({user:s,token:a})})(e,t)},M=s(22),G=s.n(M);var z=async e=>{const t=await G.a.get("https://api.github.com/user",{headers:{Authorization:"Bearer "+e}}),{data:s}=t,a=await O.default.user.findOrCreate({where:{userId:s.id,resourceServer:"github",nickname:s.name,OAuth:!0}}),r=K.a.sign(a[0].toJSON(),I.secretOrKey);return{user:a,token:r}};var U=(e,t)=>{P(e,t)},F=(e,t)=>{w.a.authenticate("github",{scope:["user: email"]})(e,t)},H=(e,t)=>{L(e,t)},J=async(e,t)=>{const{token:s}=e.body,a=await z(s);return t.status(200).json(a)};var X={getMilestoneFromDB:async()=>{try{return await O.default.milestone.findAll({include:[{model:O.default.issue,attributes:["isOpen"]}]})}catch(e){throw new Error(e)}},deleteMilestoneFromDB:async e=>{try{return await O.default.history.destroy({where:{mid:e}}),!0}catch(e){throw new Error(e)}},editMilestoneFromDB:async(e,t)=>{try{return await O.default.milestone.update(t,{where:{mid:e}})}catch(e){throw new Error(e)}},addMilestoneToDB:async e=>{let t;try{t=await O.default.milestone.create(e)}catch(e){throw new Error(e)}return t}};var V=async(e,t)=>{try{const e=await X.getMilestoneFromDB();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e})}},Y=async(e,t)=>{try{return await X.deleteMilestonFromDB(e.params.id),t.status(200).end()}catch(e){return t.status(400).json({message:e})}},W=async(e,t)=>{const{body:s}=e;try{await X.editMilestoneFromDB(e.params.id,s)}catch(e){t.status(400).json({message:e})}return t.status(200).end()},Z=async(e,t)=>{const{body:s}=e;let a;try{a=await X.addMilestoneToDB(s)}catch(e){t.status(400).json({message:e})}return t.status(200).json(a)},$=w.a.authenticate("jwt",{session:!1});const Q=async e=>{try{return await O.default.issue.findOne({where:{iid:e},attributes:["iid","isOpen","title","content","createdAt","closedAt"],include:[{model:O.default.user,attributes:["uid","userId","nickname","image"]},{model:O.default.comment,attributes:["cid","content","createdAt"],include:[{model:O.default.user,attributes:["uid","userId","nickname","image"]}]},{model:O.default.user,attributes:["uid","userId","nickname","image"],as:"assignees",through:{attributes:[]}},{model:O.default.label,through:{attributes:[]},attributes:["name","color"]},{model:O.default.milestone,attributes:["mid","title"],include:[{model:O.default.issue,attributes:["isOpen"]}]}]})}catch(e){throw new Error(e)}};var ee=Q,te=async e=>{try{if(!e){return await O.default.issue.findAll({attributes:["iid","isOpen","title","createdAt","closedAt"],include:[{model:O.default.user,attributes:["uid","userId","nickname"]},{model:O.default.comment,attributes:["cid"]},{model:O.default.user,attributes:["uid","userId","nickname","image"],as:"assignees",through:{attributes:[]}},{model:O.default.label,through:{attributes:[]},attributes:["name","color"]},{model:O.default.milestone,attributes:["mid","title"],include:[{model:O.default.issue,attributes:["isOpen"]}]}]})}const t=e>1?10*(e-1):0;return await O.default.issue.findAll({offset:t,limit:10,attributes:["iid","isOpen","title","createdAt, closedAt"],include:[{model:O.default.user,attributes:["uid","userId","nickname"]},{model:O.default.comment,attributes:["cid"]},{model:O.default.user,attributes:["uid","userId","nickname","image"],as:"assignee",through:{attributes:[]}},{model:O.default.label,through:{attributes:[]},attributes:["name","color"]},{model:O.default.milestone,attributes:["mid","title"],include:[{model:O.default.issue,attributes:["isOpen"]}]}]})}catch(e){throw new Error(e)}},se=async(e,t)=>{try{const s=await O.default.issue.create({...e,uid:t});if(e.labels){const t=await O.default.label.findAll({where:{[O.default.Sequelize.Op.or]:e.labels}});await s.addLabels(t,{through:{selfGranted:!0}})}if(e.assignees){const t=await O.default.user.findAll({where:{[O.default.Sequelize.Op.or]:e.assignees}});await s.addAssignees(t,{through:{selfGranted:!0}})}return s}catch(e){throw new Error(e)}},ae=async e=>{try{await O.default.issue.destroy({where:{iid:e}})}catch(e){throw new Error(e)}},re=async(e,t)=>{try{if(e){!1===e.isOpen&&(e.closedAt=new Date),await O.default.issue.update({...e},{where:{iid:t}});const{labels:s,assignees:a}=e;if(s||a){const e=await Q(t);if(s){const[a,r]=s.reduce((e,t)=>(t.state?(delete t.state,e[0].push(t)):e[1].push(t.name),e),[[],[]]);if(a.length){const t=await O.default.label.findAll({where:{[O.default.Sequelize.Op.or]:a}});await e.addLabels(t,{through:{selfGranted:!0}})}r.length&&await O.default.sequelize.models.issue_label.destroy({where:{issue_iid:t,label_name:{[O.default.Sequelize.Op.or]:r}}})}if(a){const[s,r]=a.reduce((e,t)=>(t.state?(delete t.state,e[0].push(t)):e[1].push(t.uid),e),[[],[]]);if(s.length){const t=await O.default.user.findAll({where:{[O.default.Sequelize.Op.or]:s}});await e.addAssignees(t,{through:{selfGranted:!0}})}r.length&&await O.default.sequelize.models.issue_assignee.destroy({where:{issue_iid:t,user_uid:{[O.default.Sequelize.Op.or]:r}}})}}return!0}}catch(e){throw new Error(e)}};var ne=async(e,t)=>{const{page:s}=e.query;try{const e=await te(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},oe=async(e,t)=>{const s=e.params.id;try{const e=await ee(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},ue=async(e,t)=>{const{body:s}=e,{uid:a}=e.user;try{const e=await se(s,a);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},ie=async(e,t)=>{const s=e.params.id,{body:a}=e;try{const e=await re(a,s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},le=async(e,t)=>{const s=e.params.id;try{return await ae(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}};var ce=async e=>{try{return await O.default.comment.findByPk(e)}catch(e){throw new Error(e)}},de=async e=>{try{return O.default.comment.findAll({where:{iid:e}})}catch(e){throw new Error(e)}},me=async(e,t,s)=>{try{await O.default.comment.create({content:e,uid:t,iid:s})}catch(e){throw new Error(e)}},fe=async(e,t)=>{try{await O.default.comment.update({content:e},{where:{cid:t}})}catch(e){throw new Error(e)}},we=async e=>{try{await O.default.comment.destroy({where:{cid:e}})}catch(e){throw new Error(e)}};var ye=async(e,t)=>{const{iid:s}=e.params;try{const e=await de(s);return t.status(200).json(e)}catch(e){throw new Error(e)}},pe=async(e,t)=>{const{content:s,iid:a}=e.body,{uid:r}=e.user;try{return await me(s,r,a),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},he=async(e,t)=>{const{cid:s}=e.params,{content:a}=e.body;try{return await fe(a,s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},ge=async(e,t)=>{const{cid:s}=e.params;try{return await we(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}};var be=async(e,t,s)=>{const{cid:a}=e.params,{uid:r}=e.user;try{if((await ce(a)).uid!==r)return t.status(400).json({message:"댓글을 쓴 사용자가 아닙니다."})}catch(e){return t.status(400).json(e)}s()};var je=async(e,t,s)=>{try{if(await O.default.label.findByPk(e))throw new Error("이미 존재하는 이름입니다.");await O.default.label.create({name:e,desc:t,color:s})}catch(e){throw new Error(e)}},ve=async()=>{try{return O.default.label.findAll()}catch(e){throw new Error(e)}},Ee=async e=>{try{return await O.default.label.findOne({where:{name:e}})}catch(e){throw new Error(e)}},Oe=async(e,t,s,a)=>{try{if(await O.default.label.findByPk(t))throw new Error("이미 존재하는 이름입니다.");await O.default.label.update({name:t,desc:s,color:a},{where:{name:e}})}catch(e){throw new Error(e)}},Ae=async e=>{try{await O.default.label.destroy({where:{name:e}})}catch(e){throw new Error(e)}};var Ne=async(e,t)=>{const{name:s,desc:a,color:r}=e.body;try{return await je(s,a,r),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},Ie=async(e,t)=>{try{const e=await ve();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},Te=async(e,t)=>{const{name:s}=e.params;try{const e=await Ee(s);return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},Se=async(e,t)=>{const s=e.params.name,{name:a,desc:r,color:n}=e.body;try{return await Oe(s,a,r,n),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}},_e=async(e,t)=>{const{name:s}=e.params;try{return await Ae(s),t.status(200).end()}catch(e){return t.status(400).json({message:e.message})}};var Re=async e=>{const t=(async e=>{const{uid:t,mid:s}=e,a={uid:t,mid:s};Object.keys(a).forEach(e=>void 0===a[e]?delete a[e]:{});return(await O.default.issue.findAll({attributes:["iid"],where:a})).map(e=>e.iid)})(e),s=(async e=>{if(!e)return[];const t=await O.default.label.findAll({where:{[O.default.Sequelize.Op.or]:e},include:[{model:O.default.issue,attributes:["iid"]}]}),s=new Set;t.forEach(e=>e.issues.forEach(e=>s.add(e.iid)));return Array.from(s)})(e.labels),a=(async e=>{if(!e)return[];const t=await O.default.user.findAll({where:{[O.default.Sequelize.Op.or]:e},include:[{model:O.default.issue,attributes:["iid"]}]}),s=new Set;t.forEach(e=>e.issues.forEach(e=>s.add(e.iid)));return Array.from(s)})(e.assignees),[r,n,o]=await Promise.all([t,s,a]),u=new Set([...r,...n,...o]),i=Array.from(u);return O.default.issue.findAll({where:{iid:{[O.default.Sequelize.Op.or]:i}},include:[O.default.label,O.default.user]})};var qe=async(e,t)=>{const s=await Re(e.body);return t.status(200).json(s)},ke=s(23),xe=s.n(ke),De=s(24),Be=s.n(De);var Ce=async(e,t)=>t.status(200).json({link:e.file.data.link});if(b.a.config().error)throw new Error(" Couldn't find .env file ");var Ke={clientId:process.env.IMGUR_CLIENT_ID};var Pe=async()=>{try{return O.default.user.findAll({attributes:["uid","userId","nickname","image"]})}catch(e){throw new Error(e)}};var Le=async(e,t)=>{try{const e=await Pe();return t.status(200).json(e)}catch(e){return t.status(400).json({message:e.message})}},Me=()=>{const e=Object(a.Router)();return(e=>{const t=Object(a.Router)(),s=xe()({storage:Be()({clientId:Ke.clientId})});e.use("/image",t),t.use($),t.post("/upload",s.single("img"),Ce)})(e),(e=>{const t=Object(a.Router)();e.use("/login",t),t.post("/",U),t.get("/github",F),t.get("/github/callback",H),t.post("/github",J)})(e),(e=>{const t=Object(a.Router)();e.use("/signup",t),t.post("/check-id",x,D),t.post("/",k,x,B)})(e),(e=>{const t=Object(a.Router)();e.use("/milestone",t),t.use($),t.get("/",V),t.delete("/:id",Y),t.patch("/:id",W),t.post("/",Z)})(e),(e=>{const t=Object(a.Router)();e.use("/issue",t),t.use($),t.get("/",ne),t.get("/:id",oe),t.post("/",ue),t.patch("/:id",ie),t.delete("/:id",le)})(e),(e=>{const t=Object(a.Router)();e.use("/comment",t),t.use($),t.get("/:iid",ye),t.post("/",pe),t.patch("/:cid",be,he),t.delete("/:cid",be,ge)})(e),(e=>{const t=Object(a.Router)();e.use("/label",t),t.use($),t.post("/",Ne),t.get("/",Ie),t.get("/:name",Te),t.patch("/:name",Se),t.delete("/:name",_e)})(e),(e=>{const t=Object(a.Router)();e.use("/filter",t),t.use($),t.post("/list"),t.post("/search",qe)})(e),(e=>{const t=Object(a.Router)();e.use("/user",t),t.get("/",Le)})(e),e};if(b.a.config().error)throw new Error(" Couldn't find .env file ");var Ge={prefix:"/api",corsOption:{origin:process.env.CORS,credentials:!0}},ze=async e=>{e.use(m()("dev")),e.use(i()(Ge.corsOption)),e.use(Object(a.json)()),e.use(Object(a.urlencoded)({extended:!1})),e.use(o()()),(e=>{e.use(w.a.initialize()),w.a.use(A),w.a.use(S),w.a.use(_),console.log("🍗 passport Connect! 🍗")})(e),e.get("/status",(e,t)=>t.status(200).end()),e.use(Ge.prefix,Me()),e.use((e,t,s)=>s(c()(404,"Not Found"))),e.use((e,t,s,a)=>s.status(e.status).json({message:e.message}))},Ue=async e=>{await(async()=>{try{await O.default.sequelize.sync({force:!1})}catch(e){throw new Error(e)}})(),console.log("🎉 DB Connect! 🎉"),await ze(e),console.log("🍟 Express Connect! 🍟")};if(b.a.config().error)throw new Error(" Couldn't find .env file ");var Fe={port:process.env.PORT};(async()=>{const e=r()();await Ue(e),e.listen(Fe.port,()=>{console.log("Example app listening at http://localhost:"+Fe.port)})})()}]);